# building rtl-sdr
FROM debian:stable-slim AS builder_rtlsdr
ENV BRANCH_RTLSDR=0.6.0
RUN echo ======== BUILDING RTL-SDR ${BRANCH_RTLSDR} ======== && \
    apt-get update -y && apt-get install -y --no-install-recommends \
        git \
        ca-certificates \
        make \
        cmake \
        gcc \
        libc-dev \
        libusb-1.0-0-dev && \
    git config --global advice.detachedHead false && \
    git clone -b ${BRANCH_RTLSDR} --depth 1 git://git.osmocom.org/rtl-sdr.git /src/rtl-sdr && \
    mkdir -p /src/rtl-sdr/build && \
    cd /src/rtl-sdr/build && \
    cmake -Wno-dev -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DINSTALL_UDEV_RULES=ON ../ && \
    make -j -Wstringop-truncation && \
    make -j -Wstringop-truncation install && \
    cp -v /src/rtl-sdr/rtl-sdr.rules /etc/udev/rules.d/

# Install bladeRF
FROM debian:stable-slim AS builder_bladerf
ENV BRANCH_BLADERF=2019.07
RUN echo ======== BUILDING BLADERF ${BRANCH_BLADERF} ======== && \
    apt-get update -y && apt-get install -y --no-install-recommends \
        git \
        ca-certificates \
        make \
        cmake \
        gcc \
        g++ \
        libc-dev \
        libusb-1.0-0-dev \
        libtecla-dev \
        libedit-dev && \
    git config --global advice.detachedHead false && \
    git clone -b ${BRANCH_BLADERF} --depth 1 --recursive https://github.com/Nuand/bladeRF.git /src/bladeRF && \
    mkdir /src/bladeRF/host/build && \
    cd /src/bladeRF/host/build && \
    cmake -DTREAT_WARNINGS_AS_ERRORS=OFF ../ && \
    make -j && \
    make -j install

# building readsb
FROM debian:stable-slim AS builder_readsb
ENV BRANCH_LIBIIO=v0.18 \
    BRANCH_LIBAD9361IIO=v0.2 \
    BRANCH_READSB=v3.8.1 \
    BRANCH_READSB_WEBAPP=dev \
COPY --from=builder_rtlsdr /etc/udev/rules.d/rtl-sdr.rules /etc/udev/rules.d/rtl-sdr.rules
COPY --from=builder_rtlsdr /usr/local/lib/pkgconfig/librtlsdr.pc /usr/local/lib/pkgconfig/librtlsdr.pc
COPY --from=builder_rtlsdr /usr/local/include/rtl-sdr.h /usr/local/include/rtl-sdr.h
COPY --from=builder_rtlsdr /usr/local/include/rtl-sdr_export.h /usr/local/include/rtl-sdr_export.h
COPY --from=builder_rtlsdr /usr/local/lib/librtlsdr.so.0.6.0 /usr/local/lib/librtlsdr.so.0.6.0
COPY --from=builder_rtlsdr /usr/local/lib/librtlsdr.a /usr/local/lib/librtlsdr.a
COPY --from=builder_rtlsdr /usr/local/bin/rtl_sdr /usr/local/bin/rtl_sdr
COPY --from=builder_rtlsdr /usr/local/bin/rtl_tcp /usr/local/bin/rtl_tcp
COPY --from=builder_rtlsdr /usr/local/bin/rtl_test /usr/local/bin/rtl_test
COPY --from=builder_rtlsdr /usr/local/bin/rtl_fm /usr/local/bin/rtl_fm
COPY --from=builder_rtlsdr /usr/local/bin/rtl_eeprom /usr/local/bin/rtl_eeprom
COPY --from=builder_rtlsdr /usr/local/bin/rtl_adsb /usr/local/bin/rtl_adsb
COPY --from=builder_rtlsdr /usr/local/bin/rtl_power /usr/local/bin/rtl_power
COPY --from=builder_bladerf /usr/local/lib/pkgconfig/libbladeRF.pc /usr/local/lib/pkgconfig/libbladeRF.pc
COPY --from=builder_bladerf /usr/local/lib/libbladeRF.so.2 /usr/local/lib/libbladeRF.so.2
COPY --from=builder_bladerf /usr/local/lib/libbladeRF.so /usr/local/lib/libbladeRF.so
COPY --from=builder_bladerf /usr/local/include/libbladeRF.h /usr/local/include/libbladeRF.h
COPY --from=builder_bladerf /usr/local/include/bladeRF1.h /usr/local/include/bladeRF1.h
COPY --from=builder_bladerf /usr/local/include/bladeRF2.h /usr/local/include/bladeRF2.h
COPY --from=builder_bladerf /etc/udev/rules.d/88-nuand-bladerf1.rules /etc/udev/rules.d/88-nuand-bladerf1.rules
COPY --from=builder_bladerf /etc/udev/rules.d/88-nuand-bladerf2.rules /etc/udev/rules.d/88-nuand-bladerf2.rules
COPY --from=builder_bladerf /etc/udev/rules.d/88-nuand-bootloader.rules /etc/udev/rules.d/88-nuand-bootloader.rules
COPY --from=builder_bladerf /usr/local/bin/bladeRF-cli /usr/local/bin/bladeRF-cli
COPY --from=builder_bladerf /usr/local/bin/bladeRF-fsk /usr/local/bin/bladeRF-fsk
RUN echo ======== BUILDING LIBIIO ${BRANCH_LIBIIO} ======== && \
    apt-get update -y && apt-get install -y --no-install-recommends \
        git \
        ca-certificates \
        make \
        cmake \
        gcc \
        libc-dev \
        libxml2-dev \
        libfl-dev \
        bison \
        pkg-config \
        libncurses-dev \
        libusb-1.0-0-dev \
        npm \
        nodejs \
        node-typescript && \
    ldconfig -v && \
    git config --global advice.detachedHead false && \
    git clone -b ${BRANCH_LIBIIO} --depth 1 https://github.com/analogdevicesinc/libiio.git /src/libiio && \
    cd /src/libiio && \
    cmake PREFIX=/usr/local ./ && \
    make -j && \
    make -j install && \
    echo ======== BUILDING LIBAD9361-IIO ${BRANCH_LIBAD9361IIO}  ======== && \
    git clone -b ${BRANCH_LIBAD9361IIO} --depth 1 https://github.com/analogdevicesinc/libad9361-iio.git /src/libad9361-iio && \
    cd /src/libad9361-iio && \
    cmake ./ && \
    make -j && \
    make -j install && \
    echo ======== BUILDING READSB ${BRANCH_READSB} ======== && \
    git clone -b ${BRANCH_READSB} --depth 1 https://github.com/Mictronics/readsb.git /src/readsb && \
    cd /src/readsb && \
    make -j RTLSDR=yes BLADERF=yes PLUTOSDR=yes HAVE_BIASTEE=yes && \
    cp -v /src/readsb/readsb /usr/local/bin/readsb && \
    cp -v /src/readsb/viewadsb /usr/local/bin/viewadsb && \
    echo ======== BUILDING READSB WEBAPP ${BRANCH_READSB} ======== && \
    git clone -b ${BRANCH_READSB_WEBAPP} --depth 1 https://github.com/Mictronics/readsb.git /src/readsb_webapp && \
    cd /src/readsb_webapp/webapp

# Build final container image
FROM debian:stable-slim AS final
ENV VERSION_S6OVERLAY=v1.22.1.0 \
    ARCH_S6OVERLAY=amd64 \
    S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \
    S6_CMD_ARG0=/usr/local/bin/readsb

# Install s6 overlay
ADD https://github.com/just-containers/s6-overlay/releases/download/${VERSION_S6OVERLAY}/s6-overlay-${ARCH_S6OVERLAY}.tar.gz /tmp/s6-overlay.tar.gz

# Copy libraries/binaries from builder containers
COPY --from=builder_readsb /etc/udev/rules.d/* /etc/udev/rules.d/
COPY --from=builder_readsb /usr/local/ /usr/local/
COPY --from=builder_readsb /usr/lib/x86_64-linux-gnu/pkgconfig/libiio.pc /usr/lib/x86_64-linux-gnu/pkgconfig/libiio.pc
COPY --from=builder_readsb /usr/lib/x86_64-linux-gnu/libiio.* /usr/lib/x86_64-linux-gnu/
COPY --from=builder_readsb /usr/bin/iio* /usr/bin/
COPY --from=builder_readsb /usr/sbin/iiod /usr/sbin/iiod
COPY --from=builder_readsb /src/readsb_webapp/webapp/src /var/www/readsb

RUN echo ======== CONFIGURING FINAL IMAGE ======== && \
    ldconfig -v && \
    apt-get update -y && apt-get install -y --no-install-recommends \
        libusb-1.0-0 \
        libncurses6 \
        libxml2 \
        libtecla1 \
        nginx-light && \
    rm -v /etc/nginx/sites-enabled/default && \
    ln -vs /etc/nginx/sites-available/readsb /etc/nginx/sites-enabled/readsb && \
    tar -xzf /tmp/s6-overlay.tar.gz -C / && \
    rm -rf /tmp/* /var/cache/apk/*

# Copy config files
COPY etc/ /etc/
        
ENTRYPOINT [ "/init" ]

